<?php/** * Created by 赵晓凡 * User: zhaoxiaofan * Date: 2017/3/11 * Time: 10:28 */namespace mobile\index\controller;\think\Loader::import('controller/Jump', TRAIT_PATH, EXT);use think\Db;use think\Config;use think\Session;class Product extends Common{    use \traits\controller\Jump;//使用trait复用Jump中的方法    /**     * 商品详情     * @return mixed     */    public function product_details(){        $proid=$this->request->param('proid');        //商品主图        $where['proid']=$proid;        $data=Db::name('product')->where($where)->field('maxproimg,qiqiupromaximgpath')->find();        if(is_onqiniu()==true){            $data['maximg']=$data['qiqiupromaximgpath'];        }else{            if(strpos($data['maxproimg'],'http://')!==false){                $data['maximg']=$data['maxproimg'];            }else{                $data['maximg']=config('IMAGE_DOMAIN_NAME').'/public/Upload/cpimg/'.$data['maxproimg'];            }//               $data['maximg']=$data['maxproimg'];//               $data['maximg']=config('IMAGE_DOMAIN_NAME').'/public/Upload/cpimg/'.$data['maxproimg'];        }//        $data['maxproimg']=config('IMAGE_DOMAIN_NAME').'/public/Upload/cpimg/'.$data['maxproimg'];        $data['maxproimg']=$data['maximg'];        //详情页图片轮播        $albums=Db::name('productimg')->where('proid='.$proid)->field('imgpath,qiniuimgpath')->select();        if($albums){            foreach ($albums as $key=>$val){                if(is_onqiniu()==true){                    $albums[0]['imgpath']=$data['qiqiupromaximgpath'];//图片主图                    $albums[$key+1]['imgpath']=$val['qiniuimgpath'];//相册合集                }else{                    $albums[0]['imgpath']=$data['maxproimg'];//图片主图                    if(strpos($val['imgpath'],'http://')!==false){                        $albums[$key+1]['imgpath']=$val['imgpath'];//相册合集                    }else{                        $albums[$key+1]['imgpath']=config('IMAGE_DOMAIN_NAME').'/public/Upload/'.$val['imgpath'];                    }//                    $albums[$key+1]['imgpath']=config('IMAGE_DOMAIN_NAME').'/public/Public/Upload/prophoto/'.$val['imgpath'];//相册合集                   // $albums[$key+1]['imgpath']=$val['imgpath'];//相册合集                }                         }        }else{            if(is_onqiniu()==true){                $albums[0]['imgpath']=$data['qiqiupromaximgpath'];//图片主图            }else{                $albums[0]['imgpath']=$data['maxproimg'];//图片主图            }        }        $this->view->assign('albums',$albums);        return $this->view->fetch('product_details');    }    /**     * 商品收藏列表     * @return mixed     */    public function collect_list(){        return $this->view->fetch('collect_list');    }    /**     * 我的足迹     * @return mixed     */    public function history_list(){        return $this->view->fetch('history_list');    }    /**     * 商品列表     * @return mixed     */    public function product_list(){        $ishit=$this->request->param('ishit');        if($ishit==2){            $this->view->assign('name','注册区');        }elseif($ishit==3){            $this->view->assign('name','复消取');        }elseif ($ishit==4){            $this->view->assign('name','商城');        }        return $this->view->fetch('product_list');    }    /**     * 商品分类     * @return mixed     */    public function product_category(){        $cid=$this->request->param('cid');        empty($cid)?0:$cid;        if($cid===0){//推荐分类            $str='/'.$cid;        }else{//自定义分类            $str='?cid='.$cid;        }        $arr=file_get_contents(config('API_DOMAIN_NAME')."/api.php/goods/category".$str);        $category=json_decode($arr,true);        $leftTeb=$category['data'];        $mainCates=array();        foreach($leftTeb as $k=>$v){            if($v['cid']==$cid){                $mainCates[]=$v['child'];            }        }        //var_dump($leftTeb);exit;        if(!empty($mainCates)){            $mainCate=$mainCates[0];            foreach ($mainCate as $k=>$v)            {//                var_dump($mainCate[$k]);exit;                $mainCate[$k]['img']=str_replace('/Public','/public/Public',$mainCate[$k]['img']);            }        }else{            $mainCate=$leftTeb[0]['child'];            foreach ($mainCate as $k=>$v)            {                $mainCate[$k]['img']=str_replace('/Public','/public/Public',$mainCate[$k]['img']);            }        }        $this->view->assign('leftCate',$leftTeb);        $this->view->assign('mainCate',$mainCate);        $this->view->assign('cid',empty($cid)?0:$cid);        return $this->view->fetch('product_category');    }    /*     * 商品搜索     * @return mixed     */    public function product_search(){        return $this->view->fetch('product_search');    }    /**     * 商品搜索列表     * @return mixed     */    public function product_search_list(){//        var_dump($this->request->get());exit;        if($this->request->param('cid')){            $this->view->assign('param','cid');            $this->view->assign('value',$this->request->param('cid').'&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys','cid='.$this->request->param('cid'));        }elseif($this->request->param('sid')){            $this->view->assign('param','sid');            $this->view->assign('value',$this->request->param('sid').'&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys','sid='.$this->request->param('sid'));        }elseif($this->request->param('keyword')){            $this->view->assign('param','keyword');            $this->view->assign('value',$this->request->param('keyword').'&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys','keyword='.$this->request->param('keyword'));        }elseif($this->request->param('supid')) {            $this->view->assign('param', 'supid');            $this->view->assign('value', $this->request->param('supid').'&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys', 'supid='.$this->request->param('supid'));        }elseif($this->request->param('ishit')&&$this->request->param('range')){            $this->view->assign('param', 'ishit');            $this->view->assign('value', $this->request->param('ishit').'&range='.$this->request->param('range').'&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys', 'ishit='.$this->request->param('ishit').'&range='.$this->request->param('range'));        }else{            $this->view->assign('param','keyword');            $this->view->assign('value','&sort='.$this->request->param('sort').'&type='.$this->request->param('type'));            $this->view->assign('keys','');        }//        var_dump($this->request->param());exit;        return $this->view->fetch('product_search_list');    }    public function productnewdetail(){        $banner=Db::name('adlist')->where('CategoryId=5')->order('sort asc')->select();        if($banner){            foreach ($banner as $k=>$v){                $datas['banner'][$k]['poster_name']=$v['AdTitle'];                $datas['banner'][$k]['poster_url']=$v['AdLinkUrl'];                $datas['banner'][$k]['poster_picpath']=$v['AdPicture'];            }        }else{            $datas['banner']=[];        }            $this->view->assign('banner',$datas['banner']);//        var_dump($datas['banner']);exit;            return $this->view->fetch('productnewdetail');    }}