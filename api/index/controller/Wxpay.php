<?php/** * Created by 赵晓凡 * User: zhaoxiaofan * Date: 2017/2/18 * Time: 9:30 */namespace api\index\controller;use think\View;use think\Config;use think\Db;use think\Session;/** * Class Login * @package api\index\controller * @return */class Wxpay extends Auth{    protected $view;    public function __construct()    {        parent::__construct();        if (null === $this->view) {            $this->view = View::instance(Config::get('template'), Config::get('view_replace_str'));        }    }    public function apiCall()    {        if ($this->loginStatus) {            $orderno=$_GET['orderno'];            $ordertype=$this->request->param('ordertype');            $GoodsAmount=$this->request->param('GoodsAmount');            $ConsumeIntegral=$this->request->param('ConsumeIntegral');            if(empty($ConsumeIntegral)){                $ConsumeIntegral=0;            }                if(is_numeric($ConsumeIntegral)) {                    $ConsumeIntegral=floor($ConsumeIntegral*100)/100;                }else{                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                if($ConsumeIntegral<0){                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                $membername =$this->username;                $where['UserId'] = $membername;                $userinfoxx = Db::name('usermsg')->where($where)->field('Pv')->find();                if ($userinfoxx) {                    if($userinfoxx['Pv']<$ConsumeIntegral){                        $string = '<script type="text/javascript">';                        $string .= 'alert("您的积分不足！");';                        $string .= 'location.href="/mobile.php";';                        $string .= '</script>';                        return $string;                    }                    if($ordertype=='outer'){//主订单号                        $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->field('InnerOrderId')->select();                        $useumoney = 0;                        $usegoodspv = 0;                        foreach ($orderData as $key => $value) {                            $condition['InnerOrderId'] = $value['InnerOrderId'];                            $condition['Status'] = 1;                            $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,Freight,ConsumeIntegral')->find();                            if ($orderRecord) {                                $useumoney = $useumoney + $orderRecord['GoodsAmount']+$orderRecord['Freight']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                                $usegoodspv = $usegoodspv + $ConsumeIntegral;//计算需要扣除的消费积分汇总                                $orderid = $orderRecord['OuterOrderId'] . '-outer';                            } else {                                $string = '<script type="text/javascript">';                                $string .= 'alert("订单已支付！");';                                $string .= 'location.href="/mobile.php";';                                $string .= '</script>';                                return $string;                            }                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->update($updatedate);                    }elseif($ordertype=='inner'){//子订单号                        $condition['InnerOrderId'] = $orderno;                        $condition['Status'] = 1;                        $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,Freight,ConsumeIntegral')->find();                        if ($orderRecord) {                            $useumoney = $orderRecord['GoodsAmount']+$orderRecord['Freight']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                            $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                            $orderid = $orderRecord['InnerOrderId'];                        } else {                            $string = '<script type="text/javascript">';                            $string .= 'alert("订单已支付！");';                            $string .= 'location.href="/mobile.php";';                            $string .= '</script>';                            return $string;                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                    }elseif($ordertype=='other'){//其他类型的订单                        $condition['InnerOrderId'] = $orderno;                        $condition['Status'] = 1;                        $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount')->find();                        if ($orderRecord) {                            $useumoney = $orderRecord['GoodsAmount']-$ConsumeIntegral;                            $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                            $orderid = $orderRecord['InnerOrderId'];                        } else {                            $string = '<script type="text/javascript">';                            $string .= 'alert("订单已支付！");';                            $string .= 'location.href="/mobile.php";';                            $string .= '</script>';                            return $string;                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                    }                }            require_once EXTEND_PATH . 'wxpayh5/lib/WxPay.Api.php';            require_once EXTEND_PATH . 'wxpayh5/WxPay.JsApiPay.php';            require_once EXTEND_PATH . 'wxpayh5/lib/WxPay.Config.php';            $input = new \WxPayUnifiedOrder();            $input->SetBody("订单支付");            $input->SetAttach("test");            $input->SetOut_trade_no($orderid);            $input->SetTotal_fee($useumoney*100);            $input->SetTime_start(date("YmdHis"));            $input->SetTime_expire(date("YmdHis", time() + 600));            $input->SetGoods_tag("订单支付");            $input->SetNotify_url(\WxPayConfig::NOTIFY_URL);            $input->SetTrade_type("MWEB");            $input->SetScene_info('{"h5_info": "h5_info" {"type": "IOS","app_name": "h5支付测试","bundle_id": ""}}');//            $input->SetScene_info('{"h5_info": "h5_info" {"type": "IOS","app_name": "订单支付","bundle_id": ""}}');            $order = \WxPayApi::unifiedOrder($input);//            var_dump($order);exit;            $url = $order['mweb_url']."&redirect_url=http://".$_SERVER['HTTP_HOST']."/mobile.php/order/list";           echo "<script>window.location.href='".$url."';</script>";            exit;//            $this->view->assign('jsApiParameters', $url);//            $this->view->assign('total_fee', $useumoney);//            return $this->view->fetch('pay');        }else{            $string = '<script type="text/javascript">';            $string .= 'alert("未登录");';            $string .= 'location.href="/mobile.php/login";';            $string .= '</script>';            return $string;        }    }    private function generateOrder($amount){        $mainorder=date("YmdHis") . rand(100000, 999999);//生成主订单号        $data["UserId"]=$this->username;        $data["OuterOrderId"]=$mainorder;        $data["InnerOrderId"]=$mainorder.'-other';        $data["GoodsAmount"]=$amount;        $data["Status"]=1;        $data['OrderType']=2;//1普通订单 2购物币充值订单        $data["Message"]='支付宝支付';        $data["AddDate"]=date('Y-m-d H:i:s',time());        $id=Db::name("ordermain")->insertGetId($data);//添加数据到订单主表        if(!empty($id)){            $returnData['status']=1;            $returnData['msg']='支付成功';            $returnData['orderno']=$data["InnerOrderId"];        }else{            $returnData['status']=0;            $returnData['msg']='订单生成失败';        }        return $returnData;    }    public function nativeCall()    {        if ($this->loginStatus) {            $orderno=$_GET['orderno'];            $ordertype=$this->request->param('ordertype');            $GoodsAmount=$this->request->param('GoodsAmount');            $ConsumeIntegral=$this->request->param('ConsumeIntegral');            if(empty($ConsumeIntegral)){                $ConsumeIntegral=0;            }            if(is_numeric($ConsumeIntegral)) {                $ConsumeIntegral=floor($ConsumeIntegral*100)/100;            }else{                $string = '<script type="text/javascript">';                $string .= 'alert("积分参数错误！");';                $string .= 'location.href="/mobile.php";';                $string .= '</script>';                return $string;            }            if($ConsumeIntegral<0){                $string = '<script type="text/javascript">';                $string .= 'alert("积分参数错误！");';                $string .= 'location.href="/mobile.php";';                $string .= '</script>';                return $string;            }            $membername =$this->username;            $where['UserId'] = $membername;            $userinfoxx = Db::name('usermsg')->where($where)->field('Pv')->find();            if ($userinfoxx) {                if($userinfoxx['Pv']<$ConsumeIntegral){                    $string = '<script type="text/javascript">';                    $string .= 'alert("您的积分不足！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                if($ordertype=='outer'){//主订单号                    $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->field('InnerOrderId')->select();                    $useumoney = 0;                    $usegoodspv = 0;                    $goodname='';                    foreach ($orderData as $key => $value) {                        $condition['InnerOrderId'] = $value['InnerOrderId'];                        $condition['Status'] = 1;                        $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,ConsumeIntegral,Province,City,County,Address,ReceiveName,UserTel')->find();                        if ($orderRecord) {                            $useumoney = $useumoney + $orderRecord['GoodsAmount']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                            $usegoodspv = $usegoodspv + $ConsumeIntegral;//计算需要扣除的消费积分汇总                            $orderid = $orderRecord['OuterOrderId'] . '-outer';                            $addre=$orderRecord['Province'].$orderRecord['City'].$orderRecord['County'].$orderRecord['Address'];                            $ordernonew=$orderRecord['InnerOrderId'];                            $ReceiveName=$orderRecord['ReceiveName'];                            $UserTel=$orderRecord['UserTel'];                            $goodnames=Db::name('orderdetail')->field('ProName')->where('InnerOrderId='.$value['InnerOrderId'])->select();                            foreach($goodnames as $k=>$v){                                $goodname.=$v['ProName'].'/';                            }                            $goodname=rtrim($goodname,'/');                        } else {                            $string = '<script type="text/javascript">';                            $string .= 'alert("订单已支付！");';                            $string .= 'location.href="/mobile.php";';                            $string .= '</script>';                            return $string;                        }                    }                    $updatedate['ConsumeIntegral']=$usegoodspv;                    $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->update($updatedate);                }elseif($ordertype=='inner'){//子订单号                    $condition['InnerOrderId'] = $orderno;                    $condition['Status'] = 1;                    $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,ConsumeIntegral,Province,City,County,Address,ReceiveName,UserTel')->find();                    if ($orderRecord) {                        $useumoney = $orderRecord['GoodsAmount']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                        $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                        $orderid = $orderRecord['InnerOrderId'];                        $ordernonew=$orderRecord['InnerOrderId'];                        $addre=$orderRecord['Province'].$orderRecord['City'].$orderRecord['County'].$orderRecord['Address'];                        $ReceiveName=$orderRecord['ReceiveName'];                        $UserTel=$orderRecord['UserTel'];                        $goodnames=Db::name('orderdetail')->field('ProName')->where('InnerOrderId='.$orderno)->find();                        $goodname=$goodnames['ProName'];                    } else {                        $string = '<script type="text/javascript">';                        $string .= 'alert("订单已支付！");';                        $string .= 'location.href="/mobile.php";';                        $string .= '</script>';                        return $string;                    }                    $updatedate['ConsumeIntegral']=$usegoodspv;                    $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                }elseif($ordertype=='other'){//其他类型的订单                    $condition['InnerOrderId'] = $orderno;                    $condition['Status'] = 1;                    $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,Province,City,County,Address,ReceiveName,UserTel')->find();                    if ($orderRecord) {                        $useumoney = $orderRecord['GoodsAmount']-$ConsumeIntegral;                        $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                        $orderid = $orderRecord['InnerOrderId'];                        $ordernonew=$orderRecord['InnerOrderId'];                        $addre=$orderRecord['Province'].$orderRecord['City'].$orderRecord['County'].$orderRecord['Address'];                        $ReceiveName=$orderRecord['ReceiveName'];                        $UserTel=$orderRecord['UserTel'];                        $goodnames=Db::name('orderdetail')->field('ProName')->where('InnerOrderId='.$orderno)->find();                        $goodname=$goodnames['ProName'];                    } else {                        $string = '<script type="text/javascript">';                        $string .= 'alert("订单已支付！");';                        $string .= 'location.href="/mobile.php";';                        $string .= '</script>';                        return $string;                    }                    $updatedate['ConsumeIntegral']=$usegoodspv;                    $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                }            }            require_once EXTEND_PATH . 'wxpayh5/lib/WxPay.Api.php';            require_once EXTEND_PATH . 'wxpayh5/WxPay.NativePay.php';             require_once EXTEND_PATH . 'wxpayh5/lib/WxPay.Config.php';            /**             * 流程：             * 1、调用统一下单，取得code_url，生成二维码             * 2、用户扫描二维码，进行支付             * 3、支付完成之后，微信服务器会通知支付成功             * 4、在支付成功通知中需要查单确认是否真正支付成功（见：notify.php）             */            $input = new \WxPayUnifiedOrder();            $input->SetBody("订单支付");            $input->SetAttach("test");//传递订单参数            $input->SetOut_trade_no($orderid);//传递订单参数            $input->SetTotal_fee($useumoney*100);//传递价格            $input->SetTime_start(date("YmdHis"));            $input->SetTime_expire(date("YmdHis", time() + 600));            $input->SetGoods_tag("test");            $input->SetNotify_url(\WxPayConfig::NOTIFY_URL);//回调域名            $input->SetTrade_type("NATIVE");            $input->SetProduct_id("11");            $notify = new \NativePay();            $result = $notify->GetPayUrl($input);            if($result['result_code']=='FAIL'){                return ['code'=>0,'msg'=>'订单号重复'];            }            $url2 = $result["code_url"];            $url2 = $result["code_url"];            $img="http://paysdk.weixin.qq.com/example/qrcode.php?data=".$url2;            $this->view->assign('addre',$addre);            $this->view->assign('orderno',$ordernonew);            $this->view->assign('usermoney',$useumoney);            $this->view->assign('goodname',$goodname);            $this->view->assign('uertel',$UserTel);            $this->view->assign('receivename',$ReceiveName);            $this->view->assign('erweima',$img);            return $this->view->fetch('wxpay');//            return ['code'=>1,'msg'=>"<img  src=\"http://paysdk.weixin.qq.com/example/qrcode.php?data=".$url2."\" style=\"width:150px;height:150px;\"/><br/><a  href='/index.php/member/order?orderlx=2'><span style='color:white'>支付成功</span></a><a href='/index.php/order/pay?ordertype=$ordertype&orderno=$orderno'><span style='color:white'>支付失败</span></a>"];        }else{            $string = '<script type="text/javascript">';            $string .= 'alert("未登录");';            $string .= 'location.href="/mobile.php/login";';            $string .= '</script>';            return $string;        }    }    function get_client_ip(){        $cip = "unknown";        if($_SERVER['REMOTE_ADDR']){            $cip = $_SERVER['REMOTE_ADDR'];        }elseif(getenv("REMOTE_ADDR")){            $cip = getenv("REMOTE_ADDR");        }        return $cip;    }    public function jsApiCall()    {        if ($this->loginStatus) {            if (Session::get('orderno')&&Session::get('ordertype')) {                $ConsumeIntegral=Session::get('ConsumeIntegral');                $ordertype=Session::get('ordertype');                $orderno=Session::get('orderno');                if(is_numeric($ConsumeIntegral)) {                    $ConsumeIntegral=floor($ConsumeIntegral*100)/100;                }else{                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                if($ConsumeIntegral<0){                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                $membername =$this->username;                $where['UserId'] = $membername;                $userinfoxx = Db::name('usermsg')->where($where)->field('Pv')->find();                if ($userinfoxx) {                    if($userinfoxx['Pv']<$ConsumeIntegral){                        $string = '<script type="text/javascript">';                        $string .= 'alert("您的积分不足！");';                        $string .= 'location.href="/mobile.php";';                        $string .= '</script>';                        return $string;                    }                    if($ordertype=='outer'){//主订单号                        $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->field('InnerOrderId')->select();                        $useumoney = 0;                        $usegoodspv = 0;                        foreach ($orderData as $key => $value) {                            $condition['InnerOrderId'] = $value['InnerOrderId'];                            $condition['Status'] = 1;                            $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,ConsumeIntegral')->find();                            if ($orderRecord) {                                $useumoney = $useumoney + $orderRecord['GoodsAmount']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                                $usegoodspv = $usegoodspv + $ConsumeIntegral;//计算需要扣除的消费积分汇总                                $orderid = $orderRecord['OuterOrderId'] . '-outer';                            } else {                                $string = '<script type="text/javascript">';                                $string .= 'alert("订单已支付！");';                                $string .= 'location.href="/mobile.php";';                                $string .= '</script>';                                return $string;                            }                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where("OuterOrderId='".$orderno."'")->update($updatedate);                    }elseif($ordertype=='inner'){//子订单号                        $condition['InnerOrderId'] = $orderno;                        $condition['Status'] = 1;                        $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount,ConsumeIntegral')->find();                        if ($orderRecord) {                            $useumoney = $orderRecord['GoodsAmount']-$ConsumeIntegral;//计算需要扣除的购物币的总金额                            $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                            $orderid = $orderRecord['InnerOrderId'];                        } else {                            $string = '<script type="text/javascript">';                            $string .= 'alert("订单已支付！");';                            $string .= 'location.href="/mobile.php";';                            $string .= '</script>';                            return $string;                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                    }elseif($ordertype=='other'){//其他类型的订单                        $condition['InnerOrderId'] = $orderno;                        $condition['Status'] = 1;                        $orderRecord = Db::name('ordermain')->where($condition)->field('OuterOrderId,InnerOrderId,GoodsAmount')->find();                        if ($orderRecord) {                            $useumoney = $orderRecord['GoodsAmount']-$ConsumeIntegral;                            $usegoodspv =$ConsumeIntegral;//计算需要扣除的消费积分汇总                            $orderid = $orderRecord['InnerOrderId'];                        } else {                            $string = '<script type="text/javascript">';                            $string .= 'alert("订单已支付！");';                            $string .= 'location.href="/mobile.php";';                            $string .= '</script>';                            return $string;                        }                        $updatedate['ConsumeIntegral']=$usegoodspv;                        $orderData=Db::name('ordermain')->where($condition)->update($updatedate);                    }                }            }            require_once EXTEND_PATH . 'wxpayh5/SDKRuntimeException.php';            require_once EXTEND_PATH . 'wxpayh5/WxPayPubHelper.php';            require_once EXTEND_PATH . 'wxpayh5/lib/WxPay.Config.php';            //print_r($this->request->param());            //exit();            //使用jsapi接口            $jsApi = new \JsApi_pub();            //=========步骤1：网页授权获取用户openid============            //通过code获得openid            if (!isset($_GET['code'])) {                $orderno=$this->request->param('orderno');                $ordertype=$this->request->param('ordertype');                $GoodsAmount=$this->request->param('GoodsAmount');                $ConsumeIntegral=$this->request->param('ConsumeIntegral');//                var_dump($this->request->param());exit;                if(empty($ConsumeIntegral)){                    $ConsumeIntegral=0;                }                if(is_numeric($ConsumeIntegral)) {                    $ConsumeIntegral=floor($ConsumeIntegral*100)/100;                }else{                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                if($ConsumeIntegral<0){                    $string = '<script type="text/javascript">';                    $string .= 'alert("积分参数错误！");';                    $string .= 'location.href="/mobile.php";';                    $string .= '</script>';                    return $string;                }                //触发微信返回code码                $url = $jsApi->createOauthUrlForCode(\WxPayConfig::JS_API_CALL_URL);                if(!empty($orderno)&&!empty($ordertype)){                    Session::set('orderno', $orderno);                    Session::set('ordertype', $ordertype);                    Session::set('GoodsAmount', $GoodsAmount);                    Session::set('ConsumeIntegral', $ConsumeIntegral);                }elseif (empty($orderno)&&empty($ordertype)) {                    $total_fee= $this->request->param('GoodsAmount')-$this->request->param('ConsumeIntegral');                    $returnData=$this->generateOrder($total_fee);                    Session::set('orderno', $returnData['orderno']);                    Session::set('ordertype', 'other');                }                Header("Location: $url");                exit();            } else {                //获取code码，以获取openid                $code = $_GET['code'];                $jsApi->setCode($code);                $openid = $jsApi->getOpenId();            }            if (Session::get('orderno')&&Session::get('ordertype')){                $total_fee =  $useumoney;                $out_trade_no = empty($orderid) ? '' : $orderid;                Session::set('orderno', '');                Session::set('ordertype', '');            }else{                $total_fee= $this->request->param('GoodsAmount')-$this->request->param('ConsumeIntegral');                $type=$this->request->param('type');                $out_trade_no=empty($type)?date("YmdHis") . rand(100, 999):ucfirst($type).'-'.date("YmdHis") . rand(100, 999);            }            //=========步骤2：使用统一支付接口，获取prepay_id============            //使用统一支付接口            $unifiedOrder = new \UnifiedOrder_pub();            $unifiedOrder->setParameter("openid", $openid);//商品描述            $unifiedOrder->setParameter("body", "订单支付");//商品描述            //自定义订单号，此处仅作举例            $unifiedOrder->setParameter("out_trade_no", $out_trade_no);//商户订单号            $unifiedOrder->setParameter("total_fee", $total_fee * 100);//总金额            $unifiedOrder->setParameter("notify_url", \WxPayConfig::NOTIFY_URL);//通知地址            $unifiedOrder->setParameter("trade_type", "JSAPI");//交易类型            $prepay_id = $unifiedOrder->getPrepayId();            //=========步骤3：使用jsapi调起支付============            $jsApi->setPrepayId($prepay_id);            $jsApiParameters = $jsApi->getParameters();            $this->view->assign('jsApiParameters', $jsApiParameters);            $this->view->assign('total_fee', $total_fee);            return $this->view->fetch('pay');        }else{            $string = '<script type="text/javascript">';            $string .= 'alert("未登录");';            $string .= 'location.href="/mobile.php/login";';            $string .= '</script>';            return $string;        }    }}